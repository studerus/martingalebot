% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_death_cross_filter.R
\name{add_death_cross_filter}
\alias{add_death_cross_filter}
\title{Add a "Death Cross" signal filter to a data.table}
\usage{
add_death_cross_filter(
  dt,
  n_short = 50,
  n_long = 200,
  column_name = "emergency_stop"
)
}
\arguments{
\item{dt}{A \code{data.table} containing 'time' and 'price' columns, sorted by time.}

\item{n_short}{The number of periods for the short-term SMA (e.g., 50).}

\item{n_long}{The number of periods for the long-term SMA (e.g., 200).}

\item{column_name}{The name of the logical column to be created. Defaults to
\code{"emergency_stop"}.}
}
\value{
The \code{data.table} \code{dt} is returned after being modified in place.
}
\description{
This function implements a "Death Cross" indicator, a widely recognized
long-term market signal. A Death Cross occurs when a shorter-term moving
average (e.g., 50-day SMA) crosses below a longer-term moving average
(e.g., 200-day SMA). It is often interpreted as a signal of a potential
major bear market.

The function calculates the two SMAs on daily resampled data and creates a
logical column, typically \code{emergency_stop}. The signal is \code{TRUE} at the
moment the crossover happens.

The function modifies the input \code{data.table} by reference.
}
\examples{
\dontrun{
# Use a long-term dataset to see the effect of the Death Cross.
# Here we'll simulate it with shorter periods for demonstration.
dat <- get_binance_prices_from_csv(
  'BTCUSDT',
  start_time = '2021-01-01',
  end_time = '2022-12-31',
  progressbar = FALSE
) |>
  add_death_cross_filter(n_short = 50, n_long = 200)

# Find the exact moment the emergency stop was triggered
dat[emergency_stop == TRUE]

# The signal should be very infrequent.
table(dat$emergency_stop)
}
}
\seealso{
\code{\link{add_sma_filter}}, \code{\link{add_rsi_filter}}
}
