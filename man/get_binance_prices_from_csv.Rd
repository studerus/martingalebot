% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_binance_prices_from_csv.R
\name{get_binance_prices_from_csv}
\alias{get_binance_prices_from_csv}
\title{Get price data from Binance via csv files}
\usage{
get_binance_prices_from_csv(
  symbol = "PYRUSDT",
  start_time = Sys.time() - lubridate::dmonths(2),
  end_time = Sys.time() - lubridate::ddays(2),
  spot = TRUE,
  interval = 1L,
  aggregated = FALSE,
  processing = "multisession",
  ncores = parallel::detectCores(),
  progressbar = TRUE
)
}
\arguments{
\item{symbol}{a valid binance symbol of a trading pair}

\item{start_time, end_time}{an object of class \code{date} or \code{POSIXct}
or \code{POSIXt} or a character string that can be converted to these classes}

\item{spot}{whether to download spot of futures trading data}

\item{interval}{the interval for aggregating the data. 1 (default)
corresponds to 1 second, 60 corresponds to 1 minute etc.}

\item{aggregated}{whether to aggregate the price data or not. If TRUE a
columns with the highest and lowest prices for the chosen time interval is
added.}

\item{processing}{a character string specifying the processing of the job.
Default is \code{"multisession"} which corresponds to parallel processing
using separate R sessions running in the background on the same machine.
If you don't want to use parallel processing, set this argument to
\code{"sequential"}.}

\item{ncores}{the number of CPU cores used in parallel processing.}

\item{progressbar}{whether to show a progressbar or not}
}
\value{
a \code{data.table} with with time and price columns
}
\description{
This function downloads and reads csv files containing aggTrades data
from \url{https://data.binance.vision/} and merges the data to a data table.
}
\examples{
get_binance_prices_from_csv("PYRUSDT", start_time = "2023-02-02", progressbar = F)
}
\seealso{
\itemize{
\item \code{\link[=get_binance_klines_from_csv]{get_binance_klines_from_csv()}} for dowloading candlestick data via csv files
\item \code{\link[=get_binance_klines]{get_binance_klines()}} for dowloading candlestick data directly
}
}
