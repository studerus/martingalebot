% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_bollinger_filter.R
\name{add_bollinger_filter}
\alias{add_bollinger_filter}
\title{Add a Bollinger Band based deal start filter to a data.table}
\usage{
add_bollinger_filter(dt, time_period = "1 hour", n = 20, sd = 2, cutoff = 0.05)
}
\arguments{
\item{dt}{A \code{data.table} containing 'time' and 'price' columns. The function
assumes the data is already sorted by time.}

\item{time_period}{The time frame for resampling, e.g., "1 hour", "15 minutes".
Defaults to \code{"1 hour"}.}

\item{n}{The number of periods for the moving average calculation within the
Bollinger Bands. Defaults to 20.}

\item{sd}{The number of standard deviations for the upper and lower bands.
Defaults to 2.}

\item{cutoff}{The \%B threshold below which a deal can be started. Defaults to
0.05 (i.e., when the price is at or below 5\% of the band width from the
lower band).}
}
\value{
The \code{data.table} \code{dt} is returned after being modified in place,
allowing for use in a \code{magrittr} pipeline.
}
\description{
This function calculates Bollinger Bands and the corresponding \%B indicator on a
resampled time series. It then creates a logical \code{deal_start} column, which
is \code{TRUE} when the \%B value is below a specified cutoff. A low \%B value
suggests the price is "oversold" relative to its recent volatility.

The function modifies the input \code{data.table} by reference for maximum memory
efficiency.
}
\examples{
\dontrun{
# Download data and add the Bollinger Band \%B filter.
dat <- get_binance_prices_from_csv(
  'PYRUSDT',
  start_time = '2023-02-01',
  end_time = '2023-02-28',
  progressbar = FALSE
) |>
  add_bollinger_filter(n = 20, cutoff = 0.05)

# Perform backtesting using the new 'deal_start' column
backtest(data = dat, start_asap = FALSE)
}
}
\seealso{
\code{\link{add_rsi_filter}}, \code{\link{add_sma_filter}}, \code{\link{add_macd_filter}}
}
