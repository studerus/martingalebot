% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/backtest.R
\name{backtest}
\alias{backtest}
\title{Backtest for a single pair martingale trading strategy}
\usage{
backtest(
  data,
  base_order_volume = 10,
  first_safety_order_volume = 10,
  n_safety_orders = 8,
  pricescale = 2.4,
  volumescale = 1.5,
  take_profit = 2.4,
  stepscale = 1,
  stoploss = 0,
  trailing_take_profit = FALSE,
  trailing_rate = 0.002,
  start_asap = TRUE,
  use_emergency_stop = FALSE,
  plot = F,
  show_trades = F,
  compound = T,
  trading_fee = 0.075,
  ...
)
}
\arguments{
\item{data}{A \code{data.table} containing \code{time} and \code{price} columns. Additional logical
columns \code{deal_start} and \code{emergency_stop} can be provided to control deal openings and closings.}

\item{base_order_volume}{The size of the base order (in the quote currency)}

\item{first_safety_order_volume}{The size of the first safety order (in
the quote currency)}

\item{n_safety_orders}{The maximum number of safety orders}

\item{pricescale}{Price deviation to open safety orders (\% from initial
order)}

\item{volumescale}{With what number should the funds used by the last safety
order be multiplied?}

\item{take_profit}{At what percentage in profit should the bot close the
deal?}

\item{stepscale}{With what number should the price deviation percentage used
by the last safety order be multiplied?}

\item{stoploss}{At what percentage of drawdown should a stoploss be
triggered? If set to zero (default), a stoploss will never be triggered.}

\item{trailing_take_profit}{Should a trailing take profit be used? Default is \code{FALSE}.}

\item{trailing_rate}{The percentage of price decrease from the peak that triggers a sale.}

\item{start_asap}{Should new deals be started immediately after last deal was
closed. If set to \code{FALSE} new deals are only started where the logical
vector \code{deal_start} in \code{data} is TRUE.}

\item{use_emergency_stop}{Whether to use the \code{emergency_stop} column in \code{data}
to close deals and prevent new ones. Default is \code{FALSE}.}

\item{plot}{Whether to plot the results}

\item{show_trades}{Whether to return a \code{data.frame} showing the first trades}

\item{compound}{Whether to compound the profit or not. Default is \code{TRUE}.}

\item{trading_fee}{The trading fee percentage. By default it is set to 0.075,
which corresponds to the current trading fee on Binance if paid with BNB.}

\item{...}{Additional arguments that have no effect.}
}
\value{
By default a \code{data.frame} with one row is returned containing the following
values:
\itemize{
\item \code{profit}: The percentage of profit
\item \code{n_trades}: The number of deals (cycles) that have been closed.
\item \code{max_draw_down}: The maximum percentage of draw down
\item \code{required_capital}: How much capital is needed to run a bot with the
current settings
\item \verb{covered deviation}: The percentage price deviation from the initial order
to the last safety order.
\item \code{down_tolerance}: The percentage price deviation from the initial order price
to the take profit price when all safety orders are filled.
\item \code{max_time}: The maximum number of days the bot was in a stuck position
(maximum number of days of beeing fully invested).
\item \code{percent_inactive}: The percentage of time the bot was in a stuck position.
That is, all safety orders were filled and the bot was fully invested.
\item \code{n_stoploss}: The number of stoplosses that had been triggered.
\item \code{n_emergency_stops}: The number of emergency stops that had been triggered.
}
}
\description{
This function performs a backtest for a single pair martingale trading
strategy as implemented by single pair dca bots on
\href{https://3commas.io/}{3commas}, \href{https://www.pionex.com/}{Pionex},
\href{https://tradesanta.com/}{TradeSanta},
\href{https://www.okx.com/learn/introducing-the-spot-dollar-cost-averaging-dca-bot}{OKX}
and others. It is mostly written in C++ to maximize speed.
}
