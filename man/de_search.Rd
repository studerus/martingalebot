% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/de_search.R
\name{de_search}
\alias{de_search}
\title{Perform parameter optimization using Differential Evolution}
\usage{
de_search(
  data,
  objective_metric = "profit",
  n_safety_orders_bounds = c(8, 16),
  pricescale_bounds = c(0.6, 3),
  volumescale_bounds = c(1, 2),
  take_profit_bounds = c(1, 3.5),
  stepscale_bounds = c(0.8, 1),
  stoploss_bounds = c(0, 40),
  base_order_volume_bounds = c(10, 10),
  first_safety_order_volume_bounds = c(10, 10),
  DEoptim_control = list(NP = 10 * 8, itermax = 20, trace = TRUE),
  ...
)
}
\arguments{
\item{data}{A \code{data.table} containing \code{time} and \code{price} columns.}

\item{objective_metric}{A character string specifying the metric to maximize.
Can be any column returned by \code{backtest}, e.g., \code{"profit"} (default),
or a custom metric like \code{"profit / max_draw_down"}.}

\item{n_safety_orders_bounds}{A numeric vector of length 2 for the bounds
(min, max) of \code{n_safety_orders}.}

\item{pricescale_bounds}{A numeric vector of length 2 for \code{pricescale}.}

\item{volumescale_bounds}{A numeric vector of length 2 for \code{volumescale}.}

\item{take_profit_bounds}{A numeric vector of length 2 for \code{take_profit}.}

\item{stepscale_bounds}{A numeric vector of length 2 for \code{stepscale}.}

\item{stoploss_bounds}{A numeric vector of length 2 for \code{stoploss}.}

\item{base_order_volume_bounds}{A numeric vector of length 2 for \code{base_order_volume}.}

\item{first_safety_order_volume_bounds}{A numeric vector of length 2 for
\code{first_safety_order_volume}.}

\item{DEoptim_control}{A list of control parameters for \code{DEoptim}. See
\code{\link[DEoptim:DEoptim.control]{DEoptim::DEoptim.control()}} for details. Key parameters are \code{itermax} (max iterations),
\code{NP} (population size), \code{F} (differential weighting factor), and \code{CR} (crossover probability).}

\item{...}{Additional fixed parameters passed to \code{backtest}, such as
\code{start_asap = TRUE} or \code{compound = TRUE}.}
}
\value{
A \code{tibble} containing the backtest results for the best found
parameter combination.
}
\description{
This function uses the Differential Evolution algorithm from the \code{DEoptim}
package to find optimal parameters for the trading strategy. It intelligently
searches the parameter space to maximize a given objective metric.
}
\examples{
\dontrun{
# Download price data
dat <- get_binance_prices_from_csv(
  "PYRUSDT",
  start_time = "2025-01-01",
  end_time = "2025-02-01",
  progressbar = F
)

# Perform DE optimization
best_result <- de_search(
  dat,
  objective_metric = "profit",
  DEoptim_control = list(itermax = 10, NP = 50, trace = FALSE)
)

# Print the best result
print(best_result)

# Plot the best result
best_result \%>\%
  exec(backtest, !!!., data = dat, plot = TRUE)
}
}
