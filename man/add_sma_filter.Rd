% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_sma_filter.R
\name{add_sma_filter}
\alias{add_sma_filter}
\title{Add an SMA-based signal filter to a data.table}
\usage{
add_sma_filter(
  dt,
  time_period = "1 day",
  n = 100,
  column_name = "deal_start",
  price_is_above = TRUE
)
}
\arguments{
\item{dt}{A \code{data.table} containing 'time' and 'price' columns. The function
assumes the data is already sorted by time.}

\item{time_period}{The time frame for resampling. Defaults to \code{"1 day"}, which
is standard for trend-following strategies.}

\item{n}{The number of periods for the SMA lookback (e.g., 100 days).}

\item{column_name}{The name of the logical column to be created. Defaults to \code{"deal_start"}.}

\item{price_is_above}{If \code{TRUE} (default), the signal is \code{TRUE} when price > SMA.
If \code{FALSE}, the signal is \code{TRUE} when price < SMA.}
}
\value{
The \code{data.table} \code{dt} is returned after being modified in place,
allowing for use in a \code{magrittr} pipeline.
}
\description{
This function calculates a Simple Moving Average (SMA) on a resampled time
series and creates a logical signal column. The column can be configured to
signal when the price is above the SMA (e.g., for a \code{deal_start} trend filter)
or below it (e.g., for an \code{emergency_stop} signal).

The function modifies the input \code{data.table} by reference for maximum memory
efficiency.
}
\examples{
\dontrun{
# --- Example 1: Standard Trend Filter ---
# Download data and add the SMA filter for a 'deal_start' signal.
# For a short 1-month period, a shorter SMA (e.g., 10) is more illustrative.
dat <- get_binance_prices_from_csv(
  'PYRUSDT',
  start_time = '2023-02-01',
  end_time = '2023-02-28',
  progressbar = FALSE
) |>
  add_sma_filter(n = 10, column_name = "deal_start", price_is_above = TRUE)

# Perform backtesting using the new 'deal_start' column
backtest(data = dat, start_asap = FALSE)

# --- Example 2: Emergency Stop Filter ---
# Reuse 'dat' and add a stop signal for when price drops below the 20-day SMA.
data_with_stop <- dat |>
  add_sma_filter(n = 20, column_name = "emergency_stop", price_is_above = FALSE)

# Check the last few rows to see the new 'emergency_stop' column
tail(data_with_stop)
}
}
\seealso{
\code{\link{add_rsi_filter}}, \code{\link{add_bollinger_filter}}, \code{\link{add_macd_filter}}
}
